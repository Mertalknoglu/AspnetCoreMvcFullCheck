@model List<AspnetCoreMvcFull.Models.ApplicationUser>

@if (Model != null && Model.Any())
{
    <!-- Masaüstü görünüm -->
    <div class="d-none d-md-block">
        <div class="table-responsive">
            <table id="userTable" class="table table-striped table-bordered align-middle w-100">
                <thead class="table-light">
                    <tr>

                        <th>TC Kimlik No</th>
                        <th>Ad Soyad</th>
                        <th>Email</th>
                        <th>Telefon</th>
                        <th>Birim</th>
                        <th>Rol</th>
                        <th class="text-center">İşlem</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>

                            <td>@user.TcKimlikNo</td>
                            <td>@user.FirstName @user.LastName</td>
                            <td>@user.Email</td>
                            <td>@user.PhoneNumber</td>
                            <td>@user.Unit?.Unit</td>
                            <td>@(user.IsAdmin ? "Yönetici" : "Kullanıcı")</td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center gap-2">
                                    <button class="btn btn-sm btn-outline-dark" onclick="openDetailModal(@user.Id)">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-primary" onclick="openUpdateModal(@user.Id)">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@user.Id)">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <!-- Mobil görünüm -->
    <div class="d-block d-md-none">
        <div class="row row-cols-1 g-3">
            @foreach (var user in Model)
            {
                <div class="col">
                    <div class="card shadow-sm border-0">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <h5 class="card-title mb-0">@user.FirstName @user.LastName</h5>
                                <span class="badge bg-secondary">@(user.IsAdmin ? "Yönetici" : "Kullanıcı")</span>
                            </div>
                            <ul class="list-unstyled small mb-2">

                                <li><strong>TC:</strong> @user.TcKimlikNo</li>
                                <li><strong>Email:</strong> @user.Email</li>
                                <li><strong>Telefon:</strong> @user.PhoneNumber</li>
                                <li><strong>Birim:</strong> @user.Unit?.Unit</li>
                            </ul>
                            <div class="d-flex justify-content-center gap-2 flex-wrap mt-2">
                                <button class="btn btn-sm btn-outline-dark" onclick="openDetailModal(@user.Id)">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-primary" onclick="openUpdateModal(@user.Id)">
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@user.Id)">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-info text-center">Hiç kullanıcı bulunamadı.</div>
}
<!-- Kullanıcı Güncelleme Modal -->
<div class="modal fade" id="updateUserModal" tabindex="-1" aria-labelledby="updateUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="updateUserForm" method="post">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title text-white" id="updateUserModalLabel">Kullanıcı Güncelle</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="updateUserId" name="Id" />

                    <!-- TC Kimlik No en başta -->
                    <div class="mb-3">
                        <label class="form-label">T.C. Kimlik No</label>
                        <input type="text" class="form-control" name="TcKimlikNo" id="updateTc" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Ad</label>
                        <input type="text" class="form-control" name="FirstName" id="updateFirstName" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Soyad</label>
                        <input type="text" class="form-control" name="LastName" id="updateLastName" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" name="Email" id="updateEmail" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Telefon</label>
                        <input type="text" class="form-control" name="PhoneNumber" id="updatePhone" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Birim</label>
                        <select class="form-select" name="UnitId" id="updateUnitId">
                            @foreach (var item in ViewBag.Units as List<SelectListItem>)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        </select>
                    </div>


                    <div class="mb-3">
                        <label class="form-label">Yeni Şifre</label>
                        <input type="password" class="form-control" name="NewPassword" id="updateNewPassword" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Yeni Şifre Tekrar</label>
                        <input type="password" class="form-control" name="ConfirmPassword" id="updateConfirmPassword" />
                    </div>

                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" name="IsAdmin" id="updateIsAdmin" />
                        <label class="form-check-label" for="updateIsAdmin">Yönetici</label>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-dark">Güncelle</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                </div>
            </form>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        // Her iki tablo için ayrı ayrı DataTable başlat
        ['#userTable'].forEach(function (selector) {
            const tablo = $(selector);
            if (tablo.length && !$.fn.DataTable.isDataTable(tablo)) {
                tablo.DataTable({
                    paging: true,
                    searching: true,
                    ordering: true,
                    responsive: true,
                    dom: '<"d-flex justify-content-between align-items-center mb-2"fB><"table-responsive"t><"d-flex justify-content-between mt-2"lip>',
                    buttons: [
                        {
                            extend: 'collection',
                            text: 'Dışa Aktar',
                            className: 'btn btn-secondary',
                            buttons: [
                                { extend: 'copy', text: 'Kopyala' },
                                { extend: 'excel', text: 'Excel' },
                                { extend: 'csv', text: 'CSV' },
                                { extend: 'pdf', text: 'PDF' },
                                { extend: 'print', text: 'Yazdır' }
                            ]
                        }
                    ],
                    language: {
                        url: "https://cdn.datatables.net/plug-ins/1.13.6/i18n/tr.json"
                    }
                });
            }
        });

        // Tab geçişinde tablo yeniden boyutlandırılsın (gizli gelen tablo sorununu çözer)
        $('a[data-bs-toggle="tab"]').on('shown.bs.tab', function (e) {
            const targetId = $(e.target).attr("data-bs-target");
            const table = $(targetId).find('table').DataTable();
            table.columns.adjust().responsive.recalc();
        });
    });

    function openDetailModal(id) {
      $.get('/User/GetUser/' + id, function (data) {
        if (data.success) {
          $('#detailTc').text(data.tcKimlikNo);
          $('#detailName').text(data.firstName + " " + data.lastName);
          $('#detailEmail').text(data.email);
          $('#detailPhone').text(data.phoneNumber);
          $('#updateUnitId').val(String(data.unitId));
          $('#detailRole').text(data.isAdmin ? "Yönetici" : "Kullanıcı");

          const modal = new bootstrap.Modal(document.getElementById('userDetailModal'));
          modal.show();
        } else {
          alert("Kullanıcı bilgisi alınamadı.");
        }
      });
    }
        function openUpdateModal(id) {
      $.get('/User/GetUser/' + id, function (data) {
        if (data.success) {
          $('#updateUserId').val(data.id);
          $('#updateFirstName').val(data.firstName);
          $('#updateLastName').val(data.lastName);
          $('#updateEmail').val(data.email);
          $('#updatePhone').val(data.phoneNumber);
          $('#updateTc').val(data.tcKimlikNo);
          $('#updateIsAdmin').prop('checked', data.isAdmin);
          $('#updateUnitId').val(String(data.unitId));


          const modal = new bootstrap.Modal(document.getElementById('updateUserModal'));
          modal.show();
        } else {
          alert("Kullanıcı bilgisi alınamadı.");
        }
      });
    }




      $('#updateUserForm').off('submit').on('submit', function (e) {
      e.preventDefault();

      const form = document.getElementById('updateUserForm');
      const formData = new FormData(form);

      // ✅ Yönetici checkbox'ını manuel olarak ekliyoruz
      formData.set("IsAdmin", $('#updateIsAdmin').is(":checked"));

      const id = $('#updateUserId').val();

      $.ajax({
        url: `/User/EditAjax/${id}`,
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function (res) {
          if (res.success) {
            alert(res.message);
            location.reload();
          } else {
            alert("Hata: " + (res.message || "Güncelleme başarısız."));
          }
        },
        error: function (xhr) {
          alert("Sunucu hatası: " + xhr.responseText);
        }
      });
    });


    function deleteUser(id) {
      if (!confirm("Bu kullanıcıyı silmek istiyor musunuz?")) return;

      $.post('/User/Delete/' + id, function (res) {
        if (res.success) {
          alert("Kullanıcı silindi");
          location.reload();
        } else {
          alert("Silme işlemi başarısız.");
        }
      });
    }
</script>
